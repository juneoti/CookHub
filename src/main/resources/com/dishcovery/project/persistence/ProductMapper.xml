<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dishcovery.project.persistence.ProductMapper">
    <resultMap id="ProductResultMap" type="com.dishcovery.project.domain.ProductVO">
        <id property="productId" column="PRODUCT_ID"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productPrice" column="PRODUCT_PRICE"/>
        <result property="productDescription" column="PRODUCT_DESCRIPTION"/>
        <result property="ingredientId" column="INGREDIENT_ID"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="stock" column="STOCK"/>
        <result property="productImagePath" column="PRODUCT_IMAGE_PATH"/>
    </resultMap>

    <resultMap id="ProductItem" type="com.dishcovery.project.domain.OrderPageItemDTO">
        <id property="productId" column="PRODUCT_ID"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productPrice" column="PRODUCT_PRICE"/>
    </resultMap>

    <resultMap id="orderHistoryResultMap" type="com.dishcovery.project.domain.OrderHistoryDTO">
        <result property="orderId" column="order_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="orderProductName" column="order_product_name"/>
        <result property="productId" column="product_id"/>
        <result property="productCount" column="product_count"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="product_price"/>
    </resultMap>

    <!-- 상품 등록 -->
    <insert id="insertProduct">
        INSERT INTO Products (product_id, product_name, product_price, product_description, ingredient_id,
                              product_image_path, stock, created_at, updated_at)
        VALUES (PRODUCT_SEQ.NEXTVAL, #{productName}, #{productPrice}, #{productDescription}, #{ingredientId},
                #{productImagePath, jdbcType=VARCHAR}, #{stock}, SYSDATE, SYSDATE)
    </insert>

    <select id="getAllProducts" parameterType="com.dishcovery.project.util.Pagination"
            resultType="com.dishcovery.project.domain.ProductVO">
        SELECT * FROM (
        SELECT p.*, i.ingredient_name,
        ROW_NUMBER() OVER (ORDER BY p.created_at DESC) AS row_num
        FROM products p  <!-- ✅ 테이블명 수정 -->
        LEFT JOIN ingredients i ON p.ingredient_id = i.ingredient_id
        ) WHERE row_num BETWEEN #{start} AND #{end}
    </select>

    <!-- 전체 상품 개수 조회 -->
    <select id="getTotalProductCount" resultType="int">
        SELECT COUNT(*)
        FROM products
    </select>

    <!-- Ingredients 목록 조회 -->
    <select id="getAllProductIngredients" resultType="com.dishcovery.project.domain.IngredientsVO">
        SELECT ingredient_id, ingredient_name
        FROM Ingredients
    </select>

    <select id="getProduct" resultMap="ProductResultMap">
        SELECT *
        FROM PRODUCTS
        WHERE PRODUCT_ID = #{productId}
    </select>

    <select id="getProductInfo" resultMap="ProductItem">
        SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_PRICE
        FROM PRODUCTS
        WHERE PRODUCT_ID = #{productId}
    </select>

    <insert id="insertProductDetails">
        INSERT ALL
        <foreach collection="orderDetails" item="item">
            INTO ORDERS_DETAIL (MEMBER_ID, ORDER_ID, PRODUCT_ID, PRODUCT_COUNT)
            VALUES (#{memberId}, #{orderId}, #{item.productId}, #{item.productCount})
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <select id="getOrderDetail" resultMap="orderHistoryResultMap">
        SELECT o.order_id     AS order_id,
               o.created_at   AS order_date,
               o.total_amount,
               o.product_name AS order_product_name,
               od.product_id,
               od.product_count,
               p.product_name,
               p.product_price,
               o.address
        FROM orders o
                 JOIN orders_detail od ON o.order_id = od.order_id
                 JOIN products p ON od.product_id = p.product_id
        WHERE o.member_id = #{memberId}
        ORDER BY o.created_at DESC
    </select>
</mapper>
