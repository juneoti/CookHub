<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.dishcovery.project.persistence.RecipeBoardMapper">

    <!-- Recipe Board Result Map -->
    <resultMap id="RecipeBoardResultMap" type="com.dishcovery.project.domain.RecipeBoardVO">
        <id column="recipe_board_id" property="recipeBoardId"/>
        <result column="recipe_board_title" property="recipeBoardTitle"/>
        <result column="recipe_board_content" property="recipeBoardContent"/>
        <result column="member_id" property="memberId"/>
        <result column="recipe_board_created_date" property="recipeBoardCreatedDate"/>
        <result column="view_count" property="viewCount"/>
        <result column="type_id" property="typeId"/>
        <result column="method_id" property="methodId"/>
        <result column="situation_id" property="situationId"/>
        <result column="avg_rating" property="avgRating"/>
        <result column="reply_count" property="replyCount"/>
        <result column="recipe_review_count" property="recipeReviewCount"/>
    </resultMap>

    <!-- Select Recipe Board List -->
    <select id="getRecipeBoardList" resultMap="RecipeBoardResultMap">
        SELECT * FROM recipe_board
    </select>
	
	<select id="getByRecipeBoardId" parameterType="int" resultType="com.dishcovery.project.domain.RecipeBoardVO">
        SELECT 
            rb.recipe_board_id AS recipeBoardId,
            rb.recipe_board_title AS recipeBoardTitle,
            rb.recipe_board_content AS recipeBoardContent,
            rb.member_id AS memberId,
            rb.recipe_board_created_date AS recipeBoardCreatedDate,
            rb.view_count AS viewCount,
            rb.type_id AS typeId,
            rb.method_id AS methodId,
            rb.situation_id AS situationId,
            rb.avg_rating AS avgRating,
            rb.reply_count AS replyCount,
            rb.recipe_review_count AS recipeReviewCount
        FROM recipe_board rb
        WHERE rb.recipe_board_id = #{recipeBoardId}
    </select>

    <!-- Recipe Type Name -->
    <select id="getTypeName" parameterType="int" resultType="string">
        SELECT type_name
        FROM types
        WHERE type_id = #{typeId}
    </select>

    <!-- Recipe Method Name -->
    <select id="getMethodName" parameterType="int" resultType="string">
        SELECT method_name
        FROM methods
        WHERE method_id = #{methodId}
    </select>

    <!-- Recipe Situation Name -->
    <select id="getSituationName" parameterType="int" resultType="string">
        SELECT situation_name
        FROM situations
        WHERE situation_id = #{situationId}
    </select>

    <!-- Get Ingredients for Recipe Board -->
    <select id="getIngredientsByRecipeId" parameterType="int" resultType="com.dishcovery.project.domain.IngredientsVO">
        SELECT 
            i.ingredient_id AS ingredientId,
            i.ingredient_name AS ingredientName
        FROM ingredients i
        INNER JOIN recipe_ingredients ri ON i.ingredient_id = ri.ingredient_id
        WHERE ri.recipe_board_id = #{recipeBoardId}
    </select>

    <!-- Get Next Recipe Board ID -->
    <select id="getNextRecipeBoardId" resultType="int">
        SELECT recipe_board_seq.NEXTVAL FROM dual
    </select>

    <!-- Insert Recipe Board -->
    <insert id="insertRecipeBoard" parameterType="com.dishcovery.project.domain.RecipeBoardVO">
        INSERT INTO recipe_board (
            recipe_board_id,
            recipe_board_title,
            recipe_board_content,
            member_id,
            type_id,
            method_id,
            situation_id,
            avg_rating
        )
        VALUES (
            #{recipeBoardId},
            #{recipeBoardTitle},
            #{recipeBoardContent},
            #{memberId},
            #{typeId},
            #{methodId},
            #{situationId},
            #{avgRating}
        )
    </insert>

    <!-- Update Recipe Board -->
	<update id="updateRecipeBoard" parameterType="com.dishcovery.project.domain.RecipeBoardVO">
	    UPDATE recipe_board
	    SET 
	        recipe_board_title = #{recipeBoardTitle},
	        recipe_board_content = #{recipeBoardContent},
	        type_id = #{typeId},
	        method_id = #{methodId},
	        situation_id = #{situationId},
	        avg_rating = #{avgRating}
	    WHERE recipe_board_id = #{recipeBoardId}
	</update>

    <!-- Delete Recipe Board -->
    <delete id="deleteRecipeBoard" parameterType="int">
        DELETE FROM recipe_board WHERE recipe_board_id = #{recipeBoardId}
    </delete>

    <!-- Insert Recipe Ingredients -->
    <insert id="insertRecipeIngredient" parameterType="com.dishcovery.project.domain.RecipeIngredientsVO">
        INSERT INTO recipe_ingredients (recipe_board_id, ingredient_id)
        VALUES (#{recipeBoardId}, #{ingredientId})
    </insert>

    <!-- Delete Recipe Ingredients by Recipe ID -->
    <delete id="deleteRecipeIngredientsByRecipeId" parameterType="int">
        DELETE FROM recipe_ingredients WHERE recipe_board_id = #{recipeBoardId}
    </delete>

    <!-- Select All Types -->
    <select id="getAllTypes" resultType="com.dishcovery.project.domain.TypesVO">
        SELECT type_id AS typeId, type_name AS typeName
        FROM types
    </select>

    <!-- Select All Methods -->
    <select id="getAllMethods" resultType="com.dishcovery.project.domain.MethodsVO">
        SELECT method_id AS methodId, method_name AS methodName
        FROM methods
    </select>

    <!-- Select All Situations -->
    <select id="getAllSituations" resultType="com.dishcovery.project.domain.SituationsVO">
        SELECT situation_id AS situationId, situation_name AS situationName
        FROM situations
    </select>

    <!-- Select All Ingredients -->
    <select id="getAllIngredients" resultType="com.dishcovery.project.domain.IngredientsVO">
        SELECT ingredient_id AS ingredientId, ingredient_name AS ingredientName
        FROM ingredients
    </select>
    
    <select id="getRecipeBoardListWithPaging" parameterType="com.dishcovery.project.util.Pagination" resultMap="RecipeBoardResultMap">
    SELECT * 
    FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY recipe_board_created_date DESC) AS rn, rb.*
        FROM recipe_board rb
        WHERE 1=1
        <if test="ingredientIds != null and !ingredientIds.isEmpty()">
            AND rb.recipe_board_id IN (
                SELECT ri.recipe_board_id
                FROM recipe_ingredients ri
                WHERE ri.ingredient_id IN
                <foreach item="ingredientId" collection="ingredientIds" open="(" separator="," close=")">
                    #{ingredientId}
                </foreach>
                GROUP BY ri.recipe_board_id
                HAVING COUNT(DISTINCT ri.ingredient_id) =
                       <foreach item="ingredientId" collection="ingredientIds" open="" separator="+" close="">
                           1
                       </foreach>
            )
        </if>
        <if test="typeId != null">
            AND rb.type_id = #{typeId}
        </if>
        <if test="situationId != null">
            AND rb.situation_id = #{situationId}
        </if>
        <if test="methodId != null">
            AND rb.method_id = #{methodId}
        </if>
    ) 
    WHERE rn BETWEEN #{start} AND #{end}
</select>
	
	<select id="getTotalCountWithFilters" parameterType="map" resultType="int">
	    SELECT COUNT(DISTINCT rb.recipe_board_id)
	    FROM recipe_board rb
	    LEFT JOIN recipe_ingredients ri ON rb.recipe_board_id = ri.recipe_board_id
	    WHERE 1=1
	    <if test="ingredientIds != null and !ingredientIds.isEmpty()">
	        AND rb.recipe_board_id IN (
	            SELECT ri.recipe_board_id
	            FROM recipe_ingredients ri
	            WHERE ri.ingredient_id IN
	            <foreach item="ingredientId" collection="ingredientIds" open="(" separator="," close=")">
	                #{ingredientId}
	            </foreach>
	            GROUP BY ri.recipe_board_id
	            HAVING COUNT(DISTINCT ri.ingredient_id) =
	                   <foreach item="ingredientId" collection="ingredientIds" open="" separator="+" close="">
	                       1
	                   </foreach>
	        )
	    </if>
	    <if test="typeId != null">
	        AND rb.type_id = #{typeId}
	    </if>
	    <if test="situationId != null">
	        AND rb.situation_id = #{situationId}
	    </if>
	    <if test="methodId != null">
	        AND rb.method_id = #{methodId}
	    </if>
	</select>
	
	<select id="getTotalCount" resultType="int">
	    SELECT COUNT(*) 
	    FROM recipe_board
	</select>
	
	<select id="getRecipeBoardListWithFilters" parameterType="com.dishcovery.project.util.Pagination" resultMap="RecipeBoardResultMap">
    SELECT *
    FROM (
        SELECT 
            rb.*, 
            ROW_NUMBER() OVER (ORDER BY rb.recipe_board_created_date DESC) AS rn
        FROM recipe_board rb
        LEFT JOIN recipe_ingredients ri ON rb.recipe_board_id = ri.recipe_board_id
        WHERE 
            1=1
            <if test="ingredientIds != null and ingredientIds.size > 0">
                AND ri.ingredient_id IN 
                <foreach item="ingredientId" collection="ingredientIds" open="(" separator="," close=")">
                    #{ingredientId}
                </foreach>
            </if>
            <if test="typeId != null">
                AND rb.type_id = #{typeId}
            </if>
            <if test="methodId != null">
                AND rb.method_id = #{methodId}
            </if>
            <if test="situationId != null">
                AND rb.situation_id = #{situationId}
            </if>
    )
    WHERE rn BETWEEN #{start} AND #{end}
</select>

</mapper>
